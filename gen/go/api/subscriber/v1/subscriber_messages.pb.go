// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: api/subscriber/v1/subscriber_messages.proto

package subscriber

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SendFriendInviteRequest is used to send a friend invite to a target user
type SendFriendInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the user receiving the invite
	ToUserId string `protobuf:"bytes,1,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	// Optional message to accompany the invite
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *SendFriendInviteRequest) Reset() {
	*x = SendFriendInviteRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendInviteRequest) ProtoMessage() {}

func (x *SendFriendInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendInviteRequest.ProtoReflect.Descriptor instead.
func (*SendFriendInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{0}
}

func (x *SendFriendInviteRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *SendFriendInviteRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// SendFriendInviteResponse contains the ID of the created friend invite
type SendFriendInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the created invite
	InviteId string `protobuf:"bytes,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
}

func (x *SendFriendInviteResponse) Reset() {
	*x = SendFriendInviteResponse{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendInviteResponse) ProtoMessage() {}

func (x *SendFriendInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendInviteResponse.ProtoReflect.Descriptor instead.
func (*SendFriendInviteResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SendFriendInviteResponse) GetInviteId() string {
	if x != nil {
		return x.InviteId
	}
	return ""
}

// AcceptFriendInviteRequest is used to accept a pending friend invite
type AcceptFriendInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the user accepting the invite (must be the recipient)
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AcceptFriendInviteRequest) Reset() {
	*x = AcceptFriendInviteRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendInviteRequest) ProtoMessage() {}

func (x *AcceptFriendInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendInviteRequest.ProtoReflect.Descriptor instead.
func (*AcceptFriendInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptFriendInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// DeclineFriendInviteRequest is used to decline a pending friend invite
type DeclineFriendInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the invite to decline
	InviteId string `protobuf:"bytes,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// Optional explanation for declining
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *DeclineFriendInviteRequest) Reset() {
	*x = DeclineFriendInviteRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclineFriendInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineFriendInviteRequest) ProtoMessage() {}

func (x *DeclineFriendInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineFriendInviteRequest.ProtoReflect.Descriptor instead.
func (*DeclineFriendInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{3}
}

func (x *DeclineFriendInviteRequest) GetInviteId() string {
	if x != nil {
		return x.InviteId
	}
	return ""
}

func (x *DeclineFriendInviteRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// GetFriendInviteRequest is used to retrieve a specific friend invite
type GetFriendInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the invite to retrieve
	InviteId string `protobuf:"bytes,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
}

func (x *GetFriendInviteRequest) Reset() {
	*x = GetFriendInviteRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInviteRequest) ProtoMessage() {}

func (x *GetFriendInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInviteRequest.ProtoReflect.Descriptor instead.
func (*GetFriendInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetFriendInviteRequest) GetInviteId() string {
	if x != nil {
		return x.InviteId
	}
	return ""
}

// GetFriendInviteResponse contains the requested friend invite details
type GetFriendInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Details of the requested invite
	Invite *FriendInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
}

func (x *GetFriendInviteResponse) Reset() {
	*x = GetFriendInviteResponse{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInviteResponse) ProtoMessage() {}

func (x *GetFriendInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInviteResponse.ProtoReflect.Descriptor instead.
func (*GetFriendInviteResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{5}
}

func (x *GetFriendInviteResponse) GetInvite() *FriendInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

// GetAllFriendInvitesRequest is used to list all friend invites for a user
type GetAllFriendInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether to get incoming or outgoing invites (optional)
	Direction *RequestDirection `protobuf:"varint,1,opt,name=direction,proto3,enum=api.subscriber.v1.RequestDirection,oneof" json:"direction,omitempty"`
	// Filter by invite status (optional)
	Status *RequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.subscriber.v1.RequestStatus,oneof" json:"status,omitempty"`
	// Token for pagination continuation
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetAllFriendInvitesRequest) Reset() {
	*x = GetAllFriendInvitesRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllFriendInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFriendInvitesRequest) ProtoMessage() {}

func (x *GetAllFriendInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFriendInvitesRequest.ProtoReflect.Descriptor instead.
func (*GetAllFriendInvitesRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllFriendInvitesRequest) GetDirection() RequestDirection {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return RequestDirection_REQUEST_DIRECTION_UNSPECIFIED
}

func (x *GetAllFriendInvitesRequest) GetStatus() RequestStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return RequestStatus_REQUEST_STATUS_UNSPECIFIED
}

func (x *GetAllFriendInvitesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// GetAllFriendInvitesResponse contains a list of friend invites
type GetAllFriendInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of friend invites
	Invites []*FriendInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
	// Token for retrieving the next page
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetAllFriendInvitesResponse) Reset() {
	*x = GetAllFriendInvitesResponse{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllFriendInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFriendInvitesResponse) ProtoMessage() {}

func (x *GetAllFriendInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFriendInvitesResponse.ProtoReflect.Descriptor instead.
func (*GetAllFriendInvitesResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllFriendInvitesResponse) GetInvites() []*FriendInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

func (x *GetAllFriendInvitesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetFriendProfileRequest is used to retrieve a friend's profile
type GetFriendProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the friend whose profile to retrieve
	FriendId string `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *GetFriendProfileRequest) Reset() {
	*x = GetFriendProfileRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendProfileRequest) ProtoMessage() {}

func (x *GetFriendProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendProfileRequest.ProtoReflect.Descriptor instead.
func (*GetFriendProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendProfileRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

// GetFriendProfileResponse contains the requested friend's profile
type GetFriendProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Details of the requested friend
	Friend *Friend `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
}

func (x *GetFriendProfileResponse) Reset() {
	*x = GetFriendProfileResponse{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendProfileResponse) ProtoMessage() {}

func (x *GetFriendProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendProfileResponse.ProtoReflect.Descriptor instead.
func (*GetFriendProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendProfileResponse) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

// GetFriendsRequest is used to retrieve a user's friends list
type GetFriendsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token for pagination continuation
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetFriendsRequest) Reset() {
	*x = GetFriendsRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsRequest) ProtoMessage() {}

func (x *GetFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// GetFriendsResponse contains a list of the user's friends
type GetFriendsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of friends
	Friends []*Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	// Token for retrieving the next page
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetFriendsResponse) Reset() {
	*x = GetFriendsResponse{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsResponse) ProtoMessage() {}

func (x *GetFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendsResponse) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *GetFriendsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// DeleteFriendRequest is used to remove a user from friends list
type DeleteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the friend to remove
	FriendId string `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_v1_subscriber_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

var File_api_subscriber_v1_subscriber_messages_proto protoreflect.FileDescriptor

var file_api_subscriber_v1_subscriber_messages_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x65, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44, 0x72, 0x42, 0x10, 0x01, 0x32, 0x3e, 0x5e, 0x5b,
	0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61,
	0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b,
	0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b,
	0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24, 0x52, 0x08, 0x74, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xac, 0x02, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44, 0x72, 0x42, 0x10, 0x01, 0x32, 0x3e, 0x5e,
	0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39,
	0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d,
	0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d,
	0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44, 0x72, 0x42, 0x10, 0x01,
	0x32, 0x3e, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b,
	0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61,
	0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b,
	0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xac, 0x02, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x7e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47,
	0xfa, 0x42, 0x44, 0x72, 0x42, 0x10, 0x01, 0x32, 0x3e, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d,
	0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34,
	0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30,
	0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d,
	0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x06, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7f, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44, 0x72, 0x42, 0x10,
	0x01, 0x32, 0x3e, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d,
	0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39,
	0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d,
	0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d,
	0x24, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x71,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x7b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xfa, 0x42, 0x44,
	0x72, 0x42, 0x10, 0x01, 0x32, 0x3e, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b,
	0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b,
	0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61,
	0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b,
	0x31, 0x32, 0x7d, 0x24, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x42, 0x49,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x68,
	0x65, 0x6c, 0x65, 0x6b, 0x68, 0x6f, 0x76, 0x2f, 0x6d, 0x73, 0x61, 0x2d, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_subscriber_v1_subscriber_messages_proto_rawDescOnce sync.Once
	file_api_subscriber_v1_subscriber_messages_proto_rawDescData = file_api_subscriber_v1_subscriber_messages_proto_rawDesc
)

func file_api_subscriber_v1_subscriber_messages_proto_rawDescGZIP() []byte {
	file_api_subscriber_v1_subscriber_messages_proto_rawDescOnce.Do(func() {
		file_api_subscriber_v1_subscriber_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_subscriber_v1_subscriber_messages_proto_rawDescData)
	})
	return file_api_subscriber_v1_subscriber_messages_proto_rawDescData
}

var file_api_subscriber_v1_subscriber_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_subscriber_v1_subscriber_messages_proto_goTypes = []any{
	(*SendFriendInviteRequest)(nil),     // 0: api.subscriber.v1.SendFriendInviteRequest
	(*SendFriendInviteResponse)(nil),    // 1: api.subscriber.v1.SendFriendInviteResponse
	(*AcceptFriendInviteRequest)(nil),   // 2: api.subscriber.v1.AcceptFriendInviteRequest
	(*DeclineFriendInviteRequest)(nil),  // 3: api.subscriber.v1.DeclineFriendInviteRequest
	(*GetFriendInviteRequest)(nil),      // 4: api.subscriber.v1.GetFriendInviteRequest
	(*GetFriendInviteResponse)(nil),     // 5: api.subscriber.v1.GetFriendInviteResponse
	(*GetAllFriendInvitesRequest)(nil),  // 6: api.subscriber.v1.GetAllFriendInvitesRequest
	(*GetAllFriendInvitesResponse)(nil), // 7: api.subscriber.v1.GetAllFriendInvitesResponse
	(*GetFriendProfileRequest)(nil),     // 8: api.subscriber.v1.GetFriendProfileRequest
	(*GetFriendProfileResponse)(nil),    // 9: api.subscriber.v1.GetFriendProfileResponse
	(*GetFriendsRequest)(nil),           // 10: api.subscriber.v1.GetFriendsRequest
	(*GetFriendsResponse)(nil),          // 11: api.subscriber.v1.GetFriendsResponse
	(*DeleteFriendRequest)(nil),         // 12: api.subscriber.v1.DeleteFriendRequest
	(*FriendInvite)(nil),                // 13: api.subscriber.v1.FriendInvite
	(RequestDirection)(0),               // 14: api.subscriber.v1.RequestDirection
	(RequestStatus)(0),                  // 15: api.subscriber.v1.RequestStatus
	(*Friend)(nil),                      // 16: api.subscriber.v1.Friend
}
var file_api_subscriber_v1_subscriber_messages_proto_depIdxs = []int32{
	13, // 0: api.subscriber.v1.GetFriendInviteResponse.invite:type_name -> api.subscriber.v1.FriendInvite
	14, // 1: api.subscriber.v1.GetAllFriendInvitesRequest.direction:type_name -> api.subscriber.v1.RequestDirection
	15, // 2: api.subscriber.v1.GetAllFriendInvitesRequest.status:type_name -> api.subscriber.v1.RequestStatus
	13, // 3: api.subscriber.v1.GetAllFriendInvitesResponse.invites:type_name -> api.subscriber.v1.FriendInvite
	16, // 4: api.subscriber.v1.GetFriendProfileResponse.friend:type_name -> api.subscriber.v1.Friend
	16, // 5: api.subscriber.v1.GetFriendsResponse.friends:type_name -> api.subscriber.v1.Friend
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_subscriber_v1_subscriber_messages_proto_init() }
func file_api_subscriber_v1_subscriber_messages_proto_init() {
	if File_api_subscriber_v1_subscriber_messages_proto != nil {
		return
	}
	file_api_subscriber_v1_subscriber_types_proto_init()
	file_api_subscriber_v1_subscriber_messages_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_subscriber_v1_subscriber_messages_proto_msgTypes[3].OneofWrappers = []any{}
	file_api_subscriber_v1_subscriber_messages_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_subscriber_v1_subscriber_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_subscriber_v1_subscriber_messages_proto_goTypes,
		DependencyIndexes: file_api_subscriber_v1_subscriber_messages_proto_depIdxs,
		MessageInfos:      file_api_subscriber_v1_subscriber_messages_proto_msgTypes,
	}.Build()
	File_api_subscriber_v1_subscriber_messages_proto = out.File
	file_api_subscriber_v1_subscriber_messages_proto_rawDesc = nil
	file_api_subscriber_v1_subscriber_messages_proto_goTypes = nil
	file_api_subscriber_v1_subscriber_messages_proto_depIdxs = nil
}
