syntax = "proto3";

package api.subscriber.v1;

import "api/subscriber/v1/subscriber_types.proto";
import "validate/validate.proto";

option go_package = "github.com/rshelekhov/msa-messenger-protos/api/subscriber/v1;subscriber";

// SendFriendInviteRequest is used to send a friend invite to a target user
message SendFriendInviteRequest {
  // ID of the user sending the invite
  string from_user_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the user receiving the invite
  string to_user_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // Optional message to accompany the invite
  optional string message = 3 [
    (validate.rules).string = {min_len: 1, max_len: 300}
  ];
}

// SendFriendInviteResponse contains the ID of the created friend invite
message SendFriendInviteResponse {
  // Unique identifier for the created invite
  string invite_id = 1;
}

// AcceptFriendInviteRequest is used to accept a pending friend invite
message AcceptFriendInviteRequest {
  // ID of the invite to accept
  string invite_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the user accepting the invite (must be the recipient)
  string user_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];
}

// AcceptFriendInviteResponse indicates if the invite was successfully accepted
message AcceptFriendInviteResponse {
  // Whether the invite was accepted successfully
  bool success = 1;
}

// DeclineFriendInviteRequest is used to decline a pending friend invite
message DeclineFriendInviteRequest {
  // ID of the invite to decline
  string invite_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the user declining the invite (must be the recipient)
  string user_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // Optional explanation for declining
  optional string message = 3 [
    (validate.rules).string = {min_len: 1, max_len: 300}
  ];
}

// DeclineFriendInviteResponse indicates if the invite was successfully declined
message DeclineFriendInviteResponse {
  // Whether the invite was declined successfully
  bool success = 1;
}

// GetFriendInviteRequest is used to retrieve a specific friend invite
message GetFriendInviteRequest {
  // ID of the invite to retrieve
  string invite_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the requesting user (must be sender or recipient)
  string user_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];
}

// GetFriendInviteResponse contains the requested friend invite details
message GetFriendInviteResponse {
  // Details of the requested invite
  FriendInvite invite = 1;
}

// GetAllFriendInvitesRequest is used to list all friend invites for a user
message GetAllFriendInvitesRequest {
  // ID of the user whose invites to retrieve
  string user_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // Whether to get incoming or outgoing invites (optional)
  optional RequestDirection direction = 2 [
    (validate.rules).enum = {defined_only: true}
  ];

  // Filter by invite status (optional)
  optional RequestStatus status = 3 [
    (validate.rules).enum = {defined_only: true}
  ];

  // Token for pagination continuation
  string page_token = 5;
}

// GetAllFriendInvitesResponse contains a list of friend invites
message GetAllFriendInvitesResponse {
  // List of friend invites
  repeated FriendInvite invites = 1;

  // Token for retrieving the next page
  string next_page_token = 2;
}

// GetFriendProfileRequest is used to retrieve a friend's profile
message GetFriendProfileRequest {
  // ID of the user whose friend's profile to retrieve
  string user_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the friend whose profile to retrieve
  string friend_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];
}

// GetFriendProfileResponse contains the requested friend's profile
message GetFriendProfileResponse {
  // Details of the requested friend
  Friend friend = 1;
}

// GetFriendsRequest is used to retrieve a user's friends list
message GetFriendsRequest {
  // ID of the user whose friends to retrieve
  string user_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // Token for pagination continuation
  string page_token = 2;
}

// GetFriendsResponse contains a list of the user's friends
message GetFriendsResponse {
  // List of friends
  repeated Friend friends = 1;

  // Token for retrieving the next page
  string next_page_token = 2;
}

// DeleteFriendRequest is used to remove a user from friends list
message DeleteFriendRequest {
  // ID of the user making the request
  string user_id = 1 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];

  // ID of the friend to remove
  string friend_id = 2 [
    (validate.rules).string = {min_len: 1, pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"}
  ];
}

// DeleteFriendResponse indicates if the friend was successfully removed
message DeleteFriendResponse {
  // Whether the friend was removed successfully
  bool success = 1;
}
