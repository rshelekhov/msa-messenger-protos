syntax = "proto3";

package api.subscriber.v1;

import "api/subscriber/v1/messages.proto";

option go_package = "github.com/rshelekhov/msa-messenger-protos/api/subscriber/v1;subscriber";

// SubscriberService manages friend relationships between users
service SubscriberService {
  // Public method for API gateway to send a friend invite
  rpc SendFriendInvite(SendFriendInviteRequest) returns (SendFriendInviteResponse) {}

  // Public method for API gateway to accept a friend invite
  rpc AcceptFriendInvite(AcceptFriendInviteRequest) returns (AcceptFriendInviteResponse) {}

  // Public method for API gateway to decline a friend invite
  rpc DeclineFriendInvite(DeclineFriendInviteRequest) returns (DeclineFriendInviteResponse) {}

  // Public method for API gateway to retrieve details of a specific friend request
  rpc GetFriendInvite(GetFriendInviteRequest) returns (GetFriendInviteResponse) {}

  // Public method for API gateway to list all friend requests for a user (sent or received)
  rpc GetAllFriendInvites(GetAllFriendInvitesRequest) returns (GetAllFriendInvitesResponse) {}

  // Public method for API gateway to list all friends for a user
  rpc GetFriends(GetFriendsRequest) returns (GetFriendsResponse) {}

  // Public method for API gateway to delete a friendship connection between two users
  rpc DeleteFriend(DeleteFriendRequest) returns (DeleteFriendResponse) {}
}
